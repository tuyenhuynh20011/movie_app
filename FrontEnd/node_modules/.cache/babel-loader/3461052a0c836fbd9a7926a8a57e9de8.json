{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Assignment 01 Frontend\\\\FrontEnd\\\\src\\\\components\\\\browse\\\\MovieList.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from '../../utils/axios';\nimport movieTrailer from 'movie-trailer';\nimport MovieDetail from '../../components/browse/MovieDetail';\nimport './MovieList.css';\nconst base_url = 'https://image.tmdb.org/t/p/original';\nconst movies_limit = 10;\n\nfunction MovieList({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState('');\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  useEffect(() => {\n    async function fetchData2() {\n      const params = new URLSearchParams();\n      params.append('film_id', '755566');\n      const response = await axios.post('http://localhost:3001/api/movies/video/', params);\n      console.log(response);\n    }\n\n    fetchData2();\n  }, ['http://localhost:3001/api/movies/video/']);\n\n  const handleClick = movie => {\n    if (selectedMovie && selectedMovie.id === movie.id) {\n      setSelectedMovie(null);\n      setTrailerUrl('');\n    } else {\n      setSelectedMovie(movie);\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.title) || '').then(url => {\n        // const urlParams = new URLSearchParams(new URL(url).search);\n        // console.log(urlParams.get('v'))\n        // setTrailerUrl(urlParams.get('v'));\n        setTrailerUrl('EM2SmqGFTpo');\n      }).catch(error => console.log(error));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"movie-list-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row_posters sc2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }, movies.map(movie => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: movie.id,\n      onClick: () => handleClick(movie),\n      className: `row_poster ${isLargeRow && 'row_posterLarge'}`,\n      src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n      alt: movie.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }\n  }, selectedMovie && /*#__PURE__*/React.createElement(MovieDetail, {\n    movieData: selectedMovie,\n    movieTrailer: trailerUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }\n  })));\n}\n\nexport default MovieList;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Assignment 01 Frontend/FrontEnd/src/components/browse/MovieList.jsx"],"names":["React","useState","useEffect","axios","movieTrailer","MovieDetail","base_url","movies_limit","MovieList","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","selectedMovie","setSelectedMovie","fetchData","request","get","data","results","fetchData2","params","URLSearchParams","append","response","post","console","log","handleClick","movie","id","then","url","catch","error","map","poster_path","backdrop_path","name","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from '../../utils/axios';\nimport movieTrailer from 'movie-trailer';\nimport MovieDetail from '../../components/browse/MovieDetail';\nimport './MovieList.css';\n\nconst base_url = 'https://image.tmdb.org/t/p/original';\n\n\nconst movies_limit = 10;\n\n\n\nfunction MovieList({ title, fetchUrl, isLargeRow }) {\n\n\tconst [movies, setMovies] = useState([]);\n\tconst [trailerUrl, setTrailerUrl] = useState('');\n\tconst [selectedMovie, setSelectedMovie] = useState(null);\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst request = await axios.get(fetchUrl);\n\t\t\tsetMovies(request.data.results);\n\t\t\treturn request;\n\t\t}\n\t\tfetchData();\n\t}, [fetchUrl]);\n\n\tuseEffect(() => {\n\t\tasync function fetchData2() {\n\t\t\tconst params = new URLSearchParams();\n\t\t\tparams.append('film_id', '755566');\n\t\t\tconst response = await axios.post('http://localhost:3001/api/movies/video/', params);\n\t\t\tconsole.log(response)\n\t\t}\n\t\tfetchData2()\n\t},['http://localhost:3001/api/movies/video/'])\n\n\n\tconst handleClick = (movie) => {\n\t\tif (selectedMovie && selectedMovie.id === movie.id) {\n\t\t\tsetSelectedMovie(null);\n\t\t\tsetTrailerUrl('');\n\t\t} else {\n\t\t\tsetSelectedMovie(movie);\n\t\t\tmovieTrailer(movie?.title || '')\n\t\t\t.then((url) => {\n\t\t\t\t// const urlParams = new URLSearchParams(new URL(url).search);\n\t\t\t\t// console.log(urlParams.get('v'))\n\t\t\t\t// setTrailerUrl(urlParams.get('v'));\n\t\t\t\tsetTrailerUrl('EM2SmqGFTpo');\n\t\t\t\t\n\t\t\t\n\n\t\t\t})\n\t\t\t.catch((error) => console.log(error));\n\t\t}\n\t\n\t};\n\n\treturn (\n\t\t<div className='row'>\n\t\t\t<h2 className=\"movie-list-title\">{title}</h2>\n\t\t\t<div className='row_posters sc2'>\n\t\t\t\t{movies.map((movie) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tkey={movie.id}\t\n\t\t\t\t\t\t\tonClick={() => handleClick(movie)}\n\t\t\t\t\t\t\tclassName={`row_poster ${isLargeRow && 'row_posterLarge'}`}\n\t\t\t\t\t\t\tsrc={`${base_url}${\n\t\t\t\t\t\t\t\tisLargeRow ? movie.poster_path : movie.backdrop_path\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\talt={movie.name}\t\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<div style={{ padding: '40px' }}>\n\t\t\t\t{selectedMovie && <MovieDetail movieData={selectedMovie} movieTrailer={trailerUrl} />}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}